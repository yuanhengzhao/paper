require_relative '../../spec_helper'

describe ProntoForms::SnowAuditParser do

  let(:missing_image) { "/assets/missing.jpg" }

  it "should have a NAME constant with the expected value" do
    ProntoForms::SnowAuditParser::NAME.should eq("Snow Audit")
  end

  describe "max_version" do
    subject { ProntoForms::SnowAuditParser.new }
    it "should not throw an error" do
      lambda { subject.max_version }.should_not raise_error
    end
  end

  describe "parse" do

  # call the parse method on a parameter defined in the sub-describes
    subject { ProntoForms::SnowAuditParser.new.parse(form_hash) }

    # ensure that form_hash has been properly set for the specs
    before(:each) do
      form_hash.should_not be_nil
    end

    describe "for a hash missing pages" do

      let(:form_hash) {
        f = Rails.root.join('spec', 'resources', 'forms', 'snow_audit', 'missing_pages.json')
        return ActiveSupport::JSON.decode(f.read)
      }

      it "should throw a parser error" do
        lambda { subject }.should raise_error(ParserException, "Could not find expected answer [page: 0][answer: 37]")
      end

    end

    describe "for a hash with too many pictures" do

      let(:form_hash) {
        f = Rails.root.join('spec', 'resources', 'forms', 'snow_audit', 'too_many_pictures.json')
        return ActiveSupport::JSON.decode(f.read)
      }

      it "should throw a parser error" do
        lambda { subject }.should raise_error(ParserException, "Too many images attached to form")
      end

    end

    describe "for a valid hash" do

      let(:form_hash) {
        f = Rails.root.join('spec', 'resources', 'forms', 'snow_audit', 'valid.json')
        return ActiveSupport::JSON.decode(f.read)
      }

      describe "for valid input" do
        let(:expected) {
          o = Forms::SnowAudit.new

          o.id = nil
          o.reference_number = "20140821164141-1814883063"
          o.server_receive_date = "2014-08-21T16:41:44.000Z"
          o.device_submit_date = "2014-08-21T16:41:23.000Z"
          o.username = "mliao@robinsonsolutions.com"
          o.version = "1"
          o.altitude = nil
          o.latitude = "43.6521137"
          o.longitude = "-79.3821294"
          o.source = "prontoforms"

          o.audit_date = "2014-08-21"
          o.audit_time = "12:33:00-04:00"
          o.contractors_supervis = "sunil"
          o.time_snow_called_for = "12:39:00-04:00"
          o.time_snow_started = "12:39:00-04:00"
          o.time_snow_ended = "12:39:00-04:00"
          o.area_to_audit = "Stamping"
          o.gg_supervisor_onsite = "NO-OK"
          o.comments1 = "hhhhh "
          o.time_operators_start = "OK"
          o.comments2 = "gdhsj "
          o.priority_addressed = "OK"
          o.comments3 = "hbdhsh "
          o.ring_roads = "OK"
          o.comments4 = "ghhhh"
          o.docks_cleared_salted = "OK"
          o.comments5 = "cbbh"
          o.parking_lots_salted = "NO-OK"
          o.comments6 = "hhhjh"
          o.rumble_track = "OK"
          o.comments7 = "hjjj"
          o.awl_chute = "OK"
          o.comments8 = "hjjjjj"
          o.quality_auditslopes = "NO-OK"
          o.comments9 = "ghhkjj "
          o.emergency_addressed = "NO-OK"
          o.comments10 = "ghhhh "
          o.all_equipment = "NO-OK"
          o.comments11 = "gjndndnn "
          o.emergency_entrances = "OK"
          o.comments12 = "ghhhh "
          o.windrows_removed = "OK"
          o.comments13 = "hdjjdn "
          o.cleanuppile_removal = "OK"
          o.comments14 = "hjjjj "

          img1 = {"identifier"=>"269538811152","filename"=>"images.jpg","contentType"=>"image/jpeg","bytes"=>"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"}
          img2 = {"identifier"=>"269538811153","filename"=>"images (1).jpg","contentType"=>"image/jpeg","bytes"=>""}
          img3 = {"identifier"=>"269538811154","filename"=>"Logos-Small-Icons-icon.png","contentType"=>"image/png","bytes"=>"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"}
          img4 = {"identifier"=>"269538811155","filename"=>"images (2).jpg","contentType"=>"image/jpeg","bytes"=>""}

          o.image1 = ProntoForms::SourceParser.create_attachment(img1)
          o.image2 = ProntoForms::SourceParser.create_attachment(img2)
          o.image3 = ProntoForms::SourceParser.create_attachment(img3)
          o.image4 = ProntoForms::SourceParser.create_attachment(img4)

          o.image5 = nil
          o.image6 = nil
          o.image7 = nil
          o.image8 = nil
          o.image9 = nil
          o.image10 = nil

          return o
        }

        subject { ProntoForms::SnowAuditParser.new.parse(form_hash)}

        it "should return a Forms::SnowAudit object" do
          subject.should be_a_kind_of(Forms::SnowAudit)
        end

        it "should be valid" do
          expect(subject).to  be_valid
          expect(expected).to be_valid
        end

        describe "should match expected" do

          before(:each) do
            subject.save
            subject.reload
          end
          
          it "should have the same base form values" do
            expect(subject).to have_same_base_form_attributes_as(expected)
          end

          its("audit_date") { should eq(expected.audit_date) }
          its("audit_time") { should eq(expected.audit_time) }
          its("contractors_supervis") { should eq(expected.contractors_supervis) }
          its("time_snow_called_for") { should eq(expected.time_snow_called_for) }
          its("time_snow_started") { should eq(expected.time_snow_started) }
          its("time_snow_ended") { should eq(expected.time_snow_ended) }
          its("area_to_audit") { should eq(expected.area_to_audit) }
          its("gg_supervisor_onsite") { should eq(expected.gg_supervisor_onsite) }
          its("comments1") { should eq(expected.comments1) }
          its("time_operators_start") { should eq(expected.time_operators_start) }
          its("comments2") { should eq(expected.comments2) }
          its("priority_addressed") { should eq(expected.priority_addressed) }
          its("comments3") { should eq(expected.comments3) }
          its("ring_roads") { should eq(expected.ring_roads) }
          its("comments4") { should eq(expected.comments4) }
          its("docks_cleared_salted") { should eq(expected.docks_cleared_salted) }
          its("comments5") { should eq(expected.comments5) }
          its("parking_lots_salted") { should eq(expected.parking_lots_salted) }
          its("comments6") { should eq(expected.comments6) }
          its("rumble_track") { should eq(expected.rumble_track) }
          its("comments7") { should eq(expected.comments7) }
          its("awl_chute") { should eq(expected.awl_chute) }
          its("comments8") { should eq(expected.comments8) }
          its("quality_auditslopes") { should eq(expected.quality_auditslopes) }
          its("comments9") { should eq(expected.comments9) }
          its("emergency_addressed") { should eq(expected.emergency_addressed) }
          its("comments10") { should eq(expected.comments10) }
          its("all_equipment") { should eq(expected.all_equipment) }
          its("comments11") { should eq(expected.comments11) }
          its("emergency_entrances") { should eq(expected.emergency_entrances) }
          its("comments12") { should eq(expected.comments12) }
          its("windrows_removed") { should eq(expected.windrows_removed) }
          its("comments13") { should eq(expected.comments13) }
          its("cleanuppile_removal") { should eq(expected.cleanuppile_removal) }
          its("comments14") { should eq(expected.comments14) }

          its("image1") { should_not be_nil }
          its("image1") { should_not eq(missing_image) }
          its("image1_content_type") { should eq(expected.image1_content_type) }
          its("image1_file_name") { should eq(expected.image1_file_name) }
          its("image1_file_size") { should eq(expected.image1_file_size) }

          its("image2") { should_not be_nil }
          its("image2") { should_not eq(missing_image) }
          its("image2_content_type") { should eq(expected.image2_content_type) }
          its("image2_file_name") { should eq(expected.image2_file_name) }
          its("image2_file_size") { should eq(expected.image2_file_size) }

          its("image3") { should_not be_nil }
          its("image3") { should_not eq(missing_image) }
          its("image3_content_type") { should eq(expected.image3_content_type) }
          its("image3_file_name") { should eq(expected.image3_file_name) }
          its("image3_file_size") { should eq(expected.image3_file_size) }

          its("image4") { should_not be_nil }
          its("image4") { should_not eq(missing_image) }
          its("image4_content_type") { should eq(expected.image4_content_type) }
          its("image4_file_name") { should eq(expected.image4_file_name) }
          its("image4_file_size") { should eq(expected.image4_file_size) }

          its("image5_content_type") { should be_nil }
          its("image5_file_name") { should be_nil }
          its("image5_file_size") { should be_nil }

          its("image6_content_type") { should be_nil }
          its("image6_file_name") { should be_nil }
          its("image6_file_size") { should be_nil }

          its("image7_content_type") { should be_nil }
          its("image7_file_name") { should be_nil }
          its("image7_file_size") { should be_nil }

          its("image8_content_type") { should be_nil }
          its("image8_file_name") { should be_nil }
          its("image8_file_size") { should be_nil }

          its("image9_content_type") { should be_nil }
          its("image9_file_name") { should be_nil }
          its("image9_file_size") { should be_nil }

          its("image10_content_type") { should be_nil }
          its("image10_file_name") { should be_nil }
          its("image10_file_size") { should be_nil }

        end
      end
    end
  end

end