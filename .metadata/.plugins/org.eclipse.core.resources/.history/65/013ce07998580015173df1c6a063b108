# Parser to for Restroom Checklist forms submitted from ProntoForms
class ProntoForms::RestroomChecklistParser < AbstractFormParser
  
  # name of the form according to ProntoForms
  NAME = "Restroom Checklist"
  
  # Returns the highest version number this parser is capable of parsing.
  #
  # @return [numeric] highest version number this parser is capable of parsing
  def max_version
    4
  end
  
  # Attempts to convert the hash provided into a database object.
  #
  # @param form_hash [Hash] hash of the form submission
  # @param result [Forms::RestroomChecklist] object to update, nil if a new object should be created
  # @return [ActiveRecord] instance of the object
  # @raise [ParserException] if the hash could not be parsed for whatever reason
  def parse(form_hash, result = nil)
    result ||= Forms::RestroomChecklist.new
    
    # assign common values
    ProntoForms::SourceParser.get_common_answer_values(form_hash, result)
    
    # Page 1
    result.client               = ProntoForms::SourceParser.get_answer_values(form_hash, 0, 2)[0]
    result.site                 = ProntoForms::SourceParser.get_answer_values(form_hash, 0, 3)[0]
    result.shop                 = ProntoForms::SourceParser.get_answer_values(form_hash, 0, 4)[0]
    result.location             = ProntoForms::SourceParser.get_answer_values(form_hash, 0, 5)[0]
    result.floor                = ProntoForms::SourceParser.get_answer_values(form_hash, 0, 6)[0]
    result.type_mwu             = ProntoForms::SourceParser.get_answer_values(form_hash, 0, 7)[0]
    result.reference            = ProntoForms::SourceParser.get_answer_values(form_hash, 0, 8)[0]
    #result.plant_id
    
    # Page 2
    result.fi                   = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 0)[0]
    result.cv                   = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 3)[0]
    result.wc                   = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 6)[0]
    result.pw                   = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 9)[0]
    result.disp                 = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 12)[0]
    result.floor_baseboard      = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 15)[0]
    result.mirror               = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 18)[0]
    result.sink                 = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 21)[0]
    result.locker               = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 24)[0]
    result.light                = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 27)[0]
    result.ut                   = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 30)[0]
    result.fg                   = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 33)[0]
    result.sh                   = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 36)[0]
    result.sw                   = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 39)[0]
    result.safety               = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 42)[0]
    result.eq                   = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 45)[0]
    result.fives                = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 48)[0]
    
    if result.version < 4
      result.overall_rate         = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 53)[0]
      result.are_repairs_required = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 54)[0]
    else
      result.checksheet           = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 51)[0]
      result.overall_rate         = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 56)[0]
      result.are_repairs_required = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 57)[0]
    end
    # Page 3
    result.list_repairs         = ProntoForms::SourceParser.get_answer_values(form_hash, 2, 0)[0]
    
    # Page 4
    result.comments             = ProntoForms::SourceParser.get_answer_values(form_hash, 3, 0)[0]
    
    # field with multiple images
    ProntoForms::SourceParser.handle_images(result, form_hash, 3, 1, 2, "photo")
    
    return result
  end
  
end