# Parser to for Punchlist Form forms submitted from ProntoForms
class ProntoForms::PunchlistFormParser < AbstractFormParser
  
  # name of the form according to ProntoForms
  NAME = "Punchlist form"
  
   # Returns the highest version number this parser is capable of parsing.
  #
  # @return [numeric] highest version number this parser is capable of parsing
  def max_version
    7
  end
  
  # Attempts to convert the hash provided into a database object.
  #
  # @param form_hash [Hash] hash of the form submission
  # @param model [Forms::PunchlistForm] object to update, nil if a new object should be created
  # @return [ActiveRecord] instance of the object
  # @raise [ParserException] if the hash could not be parsed for whatever reason
  def parse(form_hash, model = nil)
    model ||= Forms::PunchlistForm.new

    ProntoForms::SourceParser.get_common_answer_values(form_hash, model)
    
    model.customer         =  ProntoForms::SourceParser.get_answer_values(form_hash, 0, 0)[0]
    model.shop             =  ProntoForms::SourceParser.get_answer_values(form_hash, 0, 1)[0]
    model.project_area     =  ProntoForms::SourceParser.get_answer_values(form_hash, 0, 2)[0]
    model.level            =  ProntoForms::SourceParser.get_answer_values(form_hash, 0, 3)[0]
    model.column_location  =  ProntoForms::SourceParser.get_answer_values(form_hash, 0, 4)[0]
    model.els_number       =  ProntoForms::SourceParser.get_answer_values(form_hash, 0, 5)[0]
    model.task_description =  ProntoForms::SourceParser.get_answer_values(form_hash, 0, 6)[0]
    model.bmw_comment      =  ProntoForms::SourceParser.get_answer_values(form_hash, 0, 7)[0]
    model.responsible      =  ProntoForms::SourceParser.get_answer_values(form_hash, 0, 8)[0]
    model.status           =  ProntoForms::SourceParser.get_answer_values(form_hash, 0, 10)[0]
    
    ProntoForms::SourceParser.handle_images(model, form_hash, 0, 9, 8, "picture")

    model
  end
end