# Parser to for Dolly Cleaning forms submitted from ProntoForms
class ProntoForms::DollyCleaningParser < AbstractFormParser
 
  # name of the form according to ProntoForms
  NAME = "Dolly Cleaning"
  
  # Returns the highest version number this parser is capable of parsing.
  #
  # @return [numeric] highest version number this parser is capable of parsing
  def max_version
    2
  end
  
  # Attempts to convert the hash provided into a database object.
  #
  # @param form_hash [Hash] hash of the form submission
  # @param model [Forms::DollyCleaning] object to update, nil if a new object should be created
  # @return [ActiveRecord] instance of the object
  # @raise [ParserException] if the hash could not be parsed for whatever reason
  def parse(form_hash, model = nil)
    # create a new model object if one was not provided
    model ||= Forms::DollyCleaning.new
    
    # assign common values
    ProntoForms::SourceParser.get_common_answer_values(form_hash, model)
    
    # both version 1 and 2 use the same layout of questions
    
    # page 1
    model.dolly_identifier = ProntoForms::SourceParser.get_answer_values(form_hash, 0, 0)[0]
    unless model.dolly_identifier.nil?
      model.dolly = DataSources::Dolly.find_by(identifier: model.dolly_identifier)
    end

    model.time_in          = ProntoForms::SourceParser.get_answer_date_time(form_hash, 0, 1)
    
    # page 2
    model.time_out         = ProntoForms::SourceParser.get_answer_date_time(form_hash, 1, 0)
    model.notes            = ProntoForms::SourceParser.get_answer_values(form_hash, 1, 1)[0]
    
    return model
  end
end