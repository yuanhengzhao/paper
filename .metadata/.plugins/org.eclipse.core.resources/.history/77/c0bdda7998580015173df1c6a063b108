class Security::User < ActiveRecord::Base
  has_many :permissions, foreign_key: :user_id#, inverse_of: :author
  # NOTE: review devise modules and determine which can be removed
  devise :database_authenticatable, :registerable,
         :recoverable, :rememberable, :trackable, :validatable,
         :omniauthable, :database_authenticatable,
         :omniauth_providers => [:google_oauth2]
  
  #validates_presence_of :provider, :uid
  validate :provider_and_uid
  def provider_and_uid
    if self.uid.nil?
      errors.add(:uid, "uid cannot be null") unless self.provider != "google_oauth2"
    end
  end
  
  validates_format_of :email, with: Devise::email_regexp
  
  # cannot be an admin if not authorized
  validate :must_be_authorized_to_be_admin
  def must_be_authorized_to_be_admin
    if self.admin
      errors.add(:admin, "must be authorized to be an admin") unless self.authorized
    end
  end
  
  # find the user in the system or create a new one using the authentication details provided
  def self.find_for_omniauth(omniauth)
    # find a user with a matching provider and uid, and return if it exists
    user = where(provider: omniauth['provider'], uid: omniauth['uid']).first
    
    # if no match, find a user with a matching email address
    if user.nil?
      user = where(email: omniauth['info']['email']).first
      
      # if still no match, initialize a new user record
      if user.nil?
        user = Security::User.new
        user.email = omniauth['info']['email']
        user.password = Devise.friendly_token[0,20]
        user.admin = false
        user.authorized = false
      end
      
      # update the provider and uid attributes
      user.provider = omniauth['provider']
      user.uid = omniauth['uid']
    end
    
    user
  end
  
  # override this because devise only override to_json just access attr_accessible fields
  def as_json(options={})
    h = super(options)
    h[:last_sign_in_at] = self.last_sign_in_at
    h
  end
  
  # all admin users
  scope :admins, -> { where(admin: true) }
end
